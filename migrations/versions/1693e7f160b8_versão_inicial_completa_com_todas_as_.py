"""Vers√£o inicial completa com todas as funcionalidades

Revision ID: 1693e7f160b8
Revises: 
Create Date: 2025-07-09 18:41:23.047375

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1693e7f160b8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clinic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('access_expires_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exercise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('video_url', sa.String(length=255), nullable=True),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinic.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('cpf', sa.String(length=20), nullable=True),
    sa.Column('crefito', sa.String(length=20), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinic.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)

    op.create_table('patient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=150), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('specialty', sa.String(length=100), nullable=True),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('portal_access_token', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinic.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('portal_access_token')
    )
    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_patient_full_name'), ['full_name'], unique=False)

    op.create_table('appointment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('location', sa.String(length=150), nullable=False),
    sa.Column('status', sa.String(length=30), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('session_price', sa.Float(), nullable=True),
    sa.Column('amount_paid', sa.Float(), nullable=True),
    sa.Column('payment_notes', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('recurrence_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('main_complaint', sa.Text(), nullable=True),
    sa.Column('history_of_present_illness', sa.Text(), nullable=True),
    sa.Column('past_medical_history', sa.Text(), nullable=True),
    sa.Column('medications', sa.Text(), nullable=True),
    sa.Column('social_history', sa.Text(), nullable=True),
    sa.Column('inspection_notes', sa.Text(), nullable=True),
    sa.Column('palpation_notes', sa.Text(), nullable=True),
    sa.Column('mobility_assessment', sa.Text(), nullable=True),
    sa.Column('strength_assessment', sa.Text(), nullable=True),
    sa.Column('neuro_assessment', sa.Text(), nullable=True),
    sa.Column('functional_assessment', sa.Text(), nullable=True),
    sa.Column('diagnosis', sa.Text(), nullable=True),
    sa.Column('goals', sa.Text(), nullable=True),
    sa.Column('treatment_plan', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('electronic_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('record_date', sa.DateTime(), nullable=False),
    sa.Column('medical_diagnosis', sa.Text(), nullable=True),
    sa.Column('subjective_notes', sa.Text(), nullable=False),
    sa.Column('objective_notes', sa.Text(), nullable=False),
    sa.Column('assessment', sa.Text(), nullable=False),
    sa.Column('plan', sa.Text(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prescribed_exercise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('sets', sa.String(length=50), nullable=True),
    sa.Column('repetitions', sa.String(length=50), nullable=True),
    sa.Column('frequency', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('prescribed_on', sa.DateTime(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('uploaded_file',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.String(length=255), nullable=False),
    sa.Column('secure_url', sa.String(length=512), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('uploaded_file')
    op.drop_table('prescribed_exercise')
    op.drop_table('electronic_record')
    op.drop_table('assessment')
    op.drop_table('appointment')
    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_patient_full_name'))

    op.drop_table('patient')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('exercise')
    op.drop_table('clinic')
    # ### end Alembic commands ###
